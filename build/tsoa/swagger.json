{
    "components": {
        "examples": {},
        "headers": {},
        "parameters": {},
        "requestBodies": {},
        "responses": {},
        "schemas": {
            "UserCredentials": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "CategoryCollection": {
                "properties": {
                    "hasRecordUsingCategory": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "label"
                ],
                "type": "object"
            },
            "JsonObject": {
                "properties": {},
                "type": "object",
                "description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON object.\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
            },
            "JsonArray": {
                "description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON array.",
                "properties": {},
                "type": "object",
                "additionalProperties": false
            },
            "Prisma.JsonValue": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/components/schemas/JsonObject"
                    },
                    {
                        "$ref": "#/components/schemas/JsonArray"
                    }
                ],
                "nullable": true,
                "description": "From https://github.com/sindresorhus/type-fest/\nMatches any valid JSON value."
            },
            "DishesCategories": {
                "properties": {
                    "webId": {
                        "type": "string"
                    },
                    "categories": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Prisma.JsonValue"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "webId",
                    "categories"
                ],
                "type": "object",
                "description": "Model DishesCategories"
            },
            "Prisma.Decimal": {
                "type": "string"
            },
            "Dishes": {
                "properties": {
                    "webId": {
                        "type": "string"
                    },
                    "allergen": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "$ref": "#/components/schemas/Prisma.Decimal"
                    },
                    "photoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "webId",
                    "allergen",
                    "description",
                    "price",
                    "photoUrl",
                    "category",
                    "name",
                    "id"
                ],
                "type": "object",
                "description": "Model Dishes"
            },
            "Decimal": {
                "type": "string"
            },
            "runtime.DecimalJsLike": {
                "description": "Interface for any Decimal.js-like library\r\nAllows us to accept Decimal.js from different\r\nversions and some compatible alternatives",
                "properties": {
                    "d": {
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "type": "array"
                    },
                    "e": {
                        "type": "number",
                        "format": "double"
                    },
                    "s": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "d",
                    "e",
                    "s"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "DecimalJsLike": {
                "$ref": "#/components/schemas/runtime.DecimalJsLike"
            },
            "Enumerable_string_": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                ]
            },
            "DishesCreateallergenInput": {
                "properties": {
                    "set": {
                        "$ref": "#/components/schemas/Enumerable_string_"
                    }
                },
                "required": [
                    "set"
                ],
                "type": "object"
            },
            "Prisma.DishesCreateWithoutWebInput": {
                "properties": {
                    "allergen": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DishesCreateallergenInput"
                            },
                            {
                                "$ref": "#/components/schemas/Enumerable_string_"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Decimal"
                            },
                            {
                                "$ref": "#/components/schemas/DecimalJsLike"
                            },
                            {
                                "type": "number",
                                "format": "double"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "price",
                    "category",
                    "name"
                ],
                "type": "object"
            },
            "User": {
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "password": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "isActive",
                    "dateCreated",
                    "password",
                    "lastname",
                    "firstname",
                    "email",
                    "id"
                ],
                "type": "object",
                "description": "Model User"
            },
            "Without_any.any_": {
                "properties": {},
                "type": "object"
            },
            "JsonNull": {
                "description": "Type of `Prisma.JsonNull`.\n\nYou cannot use other instances of this class. Please use the `Prisma.JsonNull` value.",
                "properties": {},
                "type": "object",
                "additionalProperties": false
            },
            "JsonNullValueInput": {
                "$ref": "#/components/schemas/JsonNull"
            },
            "InputJsonObject": {
                "properties": {},
                "type": "object",
                "description": "Matches a JSON object.\nUnlike `JsonObject`, this type allows undefined and read-only properties."
            },
            "InputJsonArray": {
                "description": "Matches a JSON array.\nUnlike `JsonArray`, readonly arrays are assignable to this type.",
                "properties": {},
                "type": "object",
                "additionalProperties": false
            },
            "InputJsonValue": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/components/schemas/InputJsonObject"
                    },
                    {
                        "$ref": "#/components/schemas/InputJsonArray"
                    }
                ],
                "description": "Matches any valid value that can be used as an input for operations like\ncreate and update as the value of a JSON field. Unlike `JsonValue`, this\ntype allows read-only arrays and read-only object properties and disallows\n`null` at the top level.\n\n`null` cannot be used as the value of a JSON field because its meaning\nwould be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or\n`Prisma.DbNull` to clear the JSON value and set the field to the database\nNULL value instead."
            },
            "DbNull": {
                "description": "Type of `Prisma.DbNull`.\n\nYou cannot use other instances of this class. Please use the `Prisma.DbNull` value.",
                "properties": {},
                "type": "object",
                "additionalProperties": false
            },
            "NullableJsonNullValueInput": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/JsonNull"
                    },
                    {
                        "$ref": "#/components/schemas/DbNull"
                    }
                ]
            },
            "CustomizationUncheckedCreateWithoutWebInput": {
                "properties": {
                    "updatedAt": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "extraCustomization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "fontFamilies": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "colorPalette": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "fontFamilies",
                    "colorPalette"
                ],
                "type": "object"
            },
            "CustomizationCreateWithoutWebInput": {
                "properties": {
                    "updatedAt": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "extraCustomization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "fontFamilies": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "colorPalette": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/JsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "fontFamilies",
                    "colorPalette"
                ],
                "type": "object"
            },
            "XOR_CustomizationCreateWithoutWebInput.CustomizationUncheckedCreateWithoutWebInput_": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/CustomizationUncheckedCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/CustomizationCreateWithoutWebInput"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "CustomizationWhereUniqueInput": {
                "properties": {
                    "webId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomizationCreateOrConnectWithoutWebInput": {
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/XOR_CustomizationCreateWithoutWebInput.CustomizationUncheckedCreateWithoutWebInput_"
                    },
                    "where": {
                        "$ref": "#/components/schemas/CustomizationWhereUniqueInput"
                    }
                },
                "required": [
                    "create",
                    "where"
                ],
                "type": "object"
            },
            "CustomizationUncheckedCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/CustomizationWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/CustomizationCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_CustomizationCreateWithoutWebInput.CustomizationUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "WebInformationUncheckedCreateWithoutWebInput": {
                "properties": {
                    "updatedAt": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "extraInformation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "restaurantType": {
                        "type": "string",
                        "nullable": true
                    },
                    "socialMedia": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "WebInformationCreateWithoutWebInput": {
                "properties": {
                    "updatedAt": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "extraInformation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "restaurantType": {
                        "type": "string",
                        "nullable": true
                    },
                    "socialMedia": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "XOR_WebInformationCreateWithoutWebInput.WebInformationUncheckedCreateWithoutWebInput_": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/WebInformationUncheckedCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/WebInformationCreateWithoutWebInput"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "WebInformationWhereUniqueInput": {
                "properties": {
                    "webId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WebInformationCreateOrConnectWithoutWebInput": {
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/XOR_WebInformationCreateWithoutWebInput.WebInformationUncheckedCreateWithoutWebInput_"
                    },
                    "where": {
                        "$ref": "#/components/schemas/WebInformationWhereUniqueInput"
                    }
                },
                "required": [
                    "create",
                    "where"
                ],
                "type": "object"
            },
            "WebInformationUncheckedCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/WebInformationWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/WebInformationCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_WebInformationCreateWithoutWebInput.WebInformationUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "DishesCategoriesUncheckedCreateWithoutWebInput": {
                "properties": {
                    "categories": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "DishesCategoriesCreateWithoutWebInput": {
                "properties": {
                    "categories": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "XOR_DishesCategoriesCreateWithoutWebInput.DishesCategoriesUncheckedCreateWithoutWebInput_": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/DishesCategoriesUncheckedCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/DishesCategoriesCreateWithoutWebInput"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "DishesCategoriesWhereUniqueInput": {
                "properties": {
                    "webId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DishesCategoriesCreateOrConnectWithoutWebInput": {
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/XOR_DishesCategoriesCreateWithoutWebInput.DishesCategoriesUncheckedCreateWithoutWebInput_"
                    },
                    "where": {
                        "$ref": "#/components/schemas/DishesCategoriesWhereUniqueInput"
                    }
                },
                "required": [
                    "create",
                    "where"
                ],
                "type": "object"
            },
            "DishesCategoriesUncheckedCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/DishesCategoriesWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/DishesCategoriesCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_DishesCategoriesCreateWithoutWebInput.DishesCategoriesUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "DishesUncheckedCreateWithoutWebInput": {
                "properties": {
                    "allergen": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DishesCreateallergenInput"
                            },
                            {
                                "$ref": "#/components/schemas/Enumerable_string_"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Decimal"
                            },
                            {
                                "$ref": "#/components/schemas/DecimalJsLike"
                            },
                            {
                                "type": "number",
                                "format": "double"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "price",
                    "category",
                    "name"
                ],
                "type": "object"
            },
            "DishesCreateWithoutWebInput": {
                "properties": {
                    "allergen": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DishesCreateallergenInput"
                            },
                            {
                                "$ref": "#/components/schemas/Enumerable_string_"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Decimal"
                            },
                            {
                                "$ref": "#/components/schemas/DecimalJsLike"
                            },
                            {
                                "type": "number",
                                "format": "double"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "price",
                    "category",
                    "name"
                ],
                "type": "object"
            },
            "XOR_Enumerable_DishesCreateWithoutWebInput_.Enumerable_DishesUncheckedCreateWithoutWebInput__": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/DishesUncheckedCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/DishesCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DishesUncheckedCreateWithoutWebInput"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DishesCreateWithoutWebInput"
                                },
                                "type": "array"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "DishesWhereUniqueInput": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "XOR_DishesCreateWithoutWebInput.DishesUncheckedCreateWithoutWebInput_": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/DishesUncheckedCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/DishesCreateWithoutWebInput"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "DishesCreateOrConnectWithoutWebInput": {
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/XOR_DishesCreateWithoutWebInput.DishesUncheckedCreateWithoutWebInput_"
                    },
                    "where": {
                        "$ref": "#/components/schemas/DishesWhereUniqueInput"
                    }
                },
                "required": [
                    "create",
                    "where"
                ],
                "type": "object"
            },
            "Enumerable_DishesCreateOrConnectWithoutWebInput_": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/DishesCreateOrConnectWithoutWebInput"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/DishesCreateOrConnectWithoutWebInput"
                        },
                        "type": "array"
                    }
                ]
            },
            "DishesCreateManyWebInput": {
                "properties": {
                    "allergen": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DishesCreateallergenInput"
                            },
                            {
                                "$ref": "#/components/schemas/Enumerable_string_"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Decimal"
                            },
                            {
                                "$ref": "#/components/schemas/DecimalJsLike"
                            },
                            {
                                "type": "number",
                                "format": "double"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "photoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "price",
                    "category",
                    "name"
                ],
                "type": "object"
            },
            "Enumerable_DishesCreateManyWebInput_": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/DishesCreateManyWebInput"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/DishesCreateManyWebInput"
                        },
                        "type": "array"
                    }
                ]
            },
            "DishesCreateManyWebInputEnvelope": {
                "properties": {
                    "skipDuplicates": {
                        "type": "boolean"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Enumerable_DishesCreateManyWebInput_"
                    }
                },
                "required": [
                    "data"
                ],
                "type": "object"
            },
            "Enumerable_DishesWhereUniqueInput_": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/DishesWhereUniqueInput"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/DishesWhereUniqueInput"
                        },
                        "type": "array"
                    }
                ]
            },
            "DishesUncheckedCreateNestedManyWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/Enumerable_DishesWhereUniqueInput_"
                    },
                    "createMany": {
                        "$ref": "#/components/schemas/DishesCreateManyWebInputEnvelope"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/Enumerable_DishesCreateOrConnectWithoutWebInput_"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_Enumerable_DishesCreateWithoutWebInput_.Enumerable_DishesUncheckedCreateWithoutWebInput__"
                    }
                },
                "type": "object"
            },
            "RestaurantRatingsUncheckedCreateWithoutWebInput": {
                "properties": {
                    "ratings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "RestaurantRatingsCreateWithoutWebInput": {
                "properties": {
                    "ratings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NullableJsonNullValueInput"
                            },
                            {
                                "$ref": "#/components/schemas/InputJsonValue"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "XOR_RestaurantRatingsCreateWithoutWebInput.RestaurantRatingsUncheckedCreateWithoutWebInput_": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/RestaurantRatingsUncheckedCreateWithoutWebInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/RestaurantRatingsCreateWithoutWebInput"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "RestaurantRatingsWhereUniqueInput": {
                "properties": {
                    "webId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RestaurantRatingsCreateOrConnectWithoutWebInput": {
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/XOR_RestaurantRatingsCreateWithoutWebInput.RestaurantRatingsUncheckedCreateWithoutWebInput_"
                    },
                    "where": {
                        "$ref": "#/components/schemas/RestaurantRatingsWhereUniqueInput"
                    }
                },
                "required": [
                    "create",
                    "where"
                ],
                "type": "object"
            },
            "RestaurantRatingsUncheckedCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/RestaurantRatingsWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/RestaurantRatingsCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_RestaurantRatingsCreateWithoutWebInput.RestaurantRatingsUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "WebUncheckedCreateWithoutAdminInput": {
                "properties": {
                    "restaurantRatings": {
                        "$ref": "#/components/schemas/RestaurantRatingsUncheckedCreateNestedOneWithoutWebInput"
                    },
                    "dishes": {
                        "$ref": "#/components/schemas/DishesUncheckedCreateNestedManyWithoutWebInput"
                    },
                    "dishesCategories": {
                        "$ref": "#/components/schemas/DishesCategoriesUncheckedCreateNestedOneWithoutWebInput"
                    },
                    "webInformation": {
                        "$ref": "#/components/schemas/WebInformationUncheckedCreateNestedOneWithoutWebInput"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/CustomizationUncheckedCreateNestedOneWithoutWebInput"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "CustomizationCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/CustomizationWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/CustomizationCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_CustomizationCreateWithoutWebInput.CustomizationUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "WebInformationCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/WebInformationWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/WebInformationCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_WebInformationCreateWithoutWebInput.WebInformationUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "DishesCategoriesCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/DishesCategoriesWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/DishesCategoriesCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_DishesCategoriesCreateWithoutWebInput.DishesCategoriesUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "DishesCreateNestedManyWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/Enumerable_DishesWhereUniqueInput_"
                    },
                    "createMany": {
                        "$ref": "#/components/schemas/DishesCreateManyWebInputEnvelope"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/Enumerable_DishesCreateOrConnectWithoutWebInput_"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_Enumerable_DishesCreateWithoutWebInput_.Enumerable_DishesUncheckedCreateWithoutWebInput__"
                    }
                },
                "type": "object"
            },
            "RestaurantRatingsCreateNestedOneWithoutWebInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/RestaurantRatingsWhereUniqueInput"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/RestaurantRatingsCreateOrConnectWithoutWebInput"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_RestaurantRatingsCreateWithoutWebInput.RestaurantRatingsUncheckedCreateWithoutWebInput_"
                    }
                },
                "type": "object"
            },
            "WebCreateWithoutAdminInput": {
                "properties": {
                    "restaurantRatings": {
                        "$ref": "#/components/schemas/RestaurantRatingsCreateNestedOneWithoutWebInput"
                    },
                    "dishes": {
                        "$ref": "#/components/schemas/DishesCreateNestedManyWithoutWebInput"
                    },
                    "dishesCategories": {
                        "$ref": "#/components/schemas/DishesCategoriesCreateNestedOneWithoutWebInput"
                    },
                    "webInformation": {
                        "$ref": "#/components/schemas/WebInformationCreateNestedOneWithoutWebInput"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/CustomizationCreateNestedOneWithoutWebInput"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "XOR_Enumerable_WebCreateWithoutAdminInput_.Enumerable_WebUncheckedCreateWithoutAdminInput__": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/WebUncheckedCreateWithoutAdminInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/WebCreateWithoutAdminInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/WebUncheckedCreateWithoutAdminInput"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/WebCreateWithoutAdminInput"
                                },
                                "type": "array"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "WebWhereUniqueInput": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "XOR_WebCreateWithoutAdminInput.WebUncheckedCreateWithoutAdminInput_": {
                "anyOf": [
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/WebUncheckedCreateWithoutAdminInput"
                            }
                        ]
                    },
                    {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Without_any.any_"
                            },
                            {
                                "$ref": "#/components/schemas/WebCreateWithoutAdminInput"
                            }
                        ]
                    }
                ],
                "description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
            },
            "WebCreateOrConnectWithoutAdminInput": {
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/XOR_WebCreateWithoutAdminInput.WebUncheckedCreateWithoutAdminInput_"
                    },
                    "where": {
                        "$ref": "#/components/schemas/WebWhereUniqueInput"
                    }
                },
                "required": [
                    "create",
                    "where"
                ],
                "type": "object"
            },
            "Enumerable_WebCreateOrConnectWithoutAdminInput_": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/WebCreateOrConnectWithoutAdminInput"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/WebCreateOrConnectWithoutAdminInput"
                        },
                        "type": "array"
                    }
                ]
            },
            "WebCreateManyAdminInput": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "Enumerable_WebCreateManyAdminInput_": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/WebCreateManyAdminInput"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/WebCreateManyAdminInput"
                        },
                        "type": "array"
                    }
                ]
            },
            "WebCreateManyAdminInputEnvelope": {
                "properties": {
                    "skipDuplicates": {
                        "type": "boolean"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Enumerable_WebCreateManyAdminInput_"
                    }
                },
                "required": [
                    "data"
                ],
                "type": "object"
            },
            "Enumerable_WebWhereUniqueInput_": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/WebWhereUniqueInput"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/WebWhereUniqueInput"
                        },
                        "type": "array"
                    }
                ]
            },
            "WebCreateNestedManyWithoutAdminInput": {
                "properties": {
                    "connect": {
                        "$ref": "#/components/schemas/Enumerable_WebWhereUniqueInput_"
                    },
                    "createMany": {
                        "$ref": "#/components/schemas/WebCreateManyAdminInputEnvelope"
                    },
                    "connectOrCreate": {
                        "$ref": "#/components/schemas/Enumerable_WebCreateOrConnectWithoutAdminInput_"
                    },
                    "create": {
                        "$ref": "#/components/schemas/XOR_Enumerable_WebCreateWithoutAdminInput_.Enumerable_WebUncheckedCreateWithoutAdminInput__"
                    }
                },
                "type": "object"
            },
            "Prisma.UserCreateInput": {
                "properties": {
                    "webs": {
                        "$ref": "#/components/schemas/WebCreateNestedManyWithoutAdminInput"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "dateCreated": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "password": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "lastname",
                    "firstname",
                    "email"
                ],
                "type": "object"
            },
            "UpdateUser": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "Prisma.JsonObject": {
                "properties": {},
                "type": "object",
                "description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON object.\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
            },
            "WebOutput": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "restaurantType": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Prisma.JsonObject"
                    },
                    "priceAverage": {
                        "type": "number",
                        "format": "double"
                    },
                    "ratings": {
                        "type": "number",
                        "format": "double"
                    },
                    "ratingStarts": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "priceAverage"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "Web": {
                "properties": {
                    "adminId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "adminId",
                    "name",
                    "id"
                ],
                "type": "object",
                "description": "Model Web"
            },
            "Prisma.WebCreateWithoutAdminInput": {
                "properties": {
                    "restaurantRatings": {
                        "$ref": "#/components/schemas/RestaurantRatingsCreateNestedOneWithoutWebInput"
                    },
                    "dishes": {
                        "$ref": "#/components/schemas/DishesCreateNestedManyWithoutWebInput"
                    },
                    "dishesCategories": {
                        "$ref": "#/components/schemas/DishesCategoriesCreateNestedOneWithoutWebInput"
                    },
                    "webInformation": {
                        "$ref": "#/components/schemas/WebInformationCreateNestedOneWithoutWebInput"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/CustomizationCreateNestedOneWithoutWebInput"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {}
    },
    "info": {
        "title": "resdy-back",
        "version": "1.0.0",
        "description": "Rest API with Nodejs and Prisma",
        "license": {
            "name": "ISC"
        },
        "contact": {
            "name": "Carlos Velázquez"
        }
    },
    "openapi": "3.0.0",
    "paths": {
        "/authentication": {
            "post": {
                "operationId": "LogIn",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "token"
                                            ],
                                            "type": "object"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentication module"
                ],
                "security": [],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCredentials"
                            }
                        }
                    }
                }
            }
        },
        "/webs/categories/{webId}": {
            "get": {
                "operationId": "GetCategories",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryCollection"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Menu module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "path",
                        "name": "webId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "operationId": "PutCategory",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DishesCategories"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Menu module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "webId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryCollection"
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "DeleteWeb",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Menu module"
                ],
                "security": [],
                "parameters": []
            }
        },
        "/webs/dishes/{webId}": {
            "get": {
                "operationId": "GetDishes",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/Dishes"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Menu module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "path",
                        "name": "webId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "post": {
                "operationId": "PostDishes",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Dishes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Menu module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "webId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Prisma.DishesCreateWithoutWebInput"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "operationId": "GetUsers",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "query",
                        "name": "lastname",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "firstname",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "post": {
                "operationId": "PostUser",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users module"
                ],
                "security": [],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Prisma.UserCreateInput"
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "PutUser",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "DeleteUser",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/webs/customization": {
            "put": {
                "operationId": "PutCustomization",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webs module"
                ],
                "security": [],
                "parameters": []
            }
        },
        "/webs/information": {
            "put": {
                "operationId": "PutInformation",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webs module"
                ],
                "security": [],
                "parameters": []
            }
        },
        "/webs": {
            "get": {
                "operationId": "GetWebs",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/WebOutput"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webs module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "restautantType",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "post": {
                "operationId": "PostWeb",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/Web"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "reason"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webs module"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Prisma.WebCreateWithoutAdminInput"
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "PutWeb",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webs module"
                ],
                "security": [],
                "parameters": []
            },
            "delete": {
                "operationId": "DeleteWeb",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Webs module"
                ],
                "security": [],
                "parameters": []
            }
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ]
}
