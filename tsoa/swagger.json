{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"avatar_url": {
						"type": "string",
						"nullable": true
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"is_active": {
						"type": "boolean"
					},
					"is_owner": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"email",
					"firstname",
					"lastname",
					"avatar_url",
					"created_at",
					"is_active",
					"is_owner"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserOutput": {
				"$ref": "#/components/schemas/Omit_User.password_"
			},
			"UserCredentials": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"remember": {
						"type": "boolean"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.email-or-firstname-or-lastname-or-password-or-is_owner_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"is_owner": {
						"type": "boolean"
					}
				},
				"required": [
					"password",
					"email",
					"firstname",
					"lastname",
					"is_owner"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreateInput": {
				"$ref": "#/components/schemas/Pick_User.email-or-firstname-or-lastname-or-password-or-is_owner_"
			},
			"Partial_Category_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"is_active": {
						"type": "boolean"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"restaurant_id": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"CategoryProps": {
				"$ref": "#/components/schemas/Partial_Category_"
			},
			"WithIsUsed_CategoryProps_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/CategoryProps"
					},
					{
						"properties": {
							"is_used": {
								"type": "boolean"
							}
						},
						"required": [
							"is_used"
						],
						"type": "object"
					}
				]
			},
			"%24Result.DefaultSelection_Prisma.%24CategoryPayload_": {
				"properties": {
					"restaurant_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"is_active": {
						"type": "boolean"
					},
					"label": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"restaurant_id",
					"updated_at",
					"created_at",
					"is_active",
					"label",
					"id"
				],
				"type": "object"
			},
			"Category": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24CategoryPayload_",
				"description": "Model Category"
			},
			"CategoryOutput": {
				"$ref": "#/components/schemas/Category"
			},
			"Pick_Category.label_": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"required": [
					"label"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"CategoryCreateInput": {
				"$ref": "#/components/schemas/Pick_Category.label_"
			},
			"Partial_Pick_CategoryProps.label__": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"WithHide_Partial_Pick_CategoryProps.label___": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_Pick_CategoryProps.label__"
					},
					{
						"properties": {
							"hide": {
								"type": "boolean"
							}
						},
						"type": "object"
					}
				]
			},
			"CategoryUpdateInput": {
				"$ref": "#/components/schemas/WithHide_Partial_Pick_CategoryProps.label___"
			},
			"Decimal": {
				"type": "string"
			},
			"%24Result.DefaultSelection_Prisma.%24DishesPayload_": {
				"properties": {
					"category_id": {
						"type": "string"
					},
					"restaurant_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"is_active": {
						"type": "boolean"
					},
					"allergen": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"$ref": "#/components/schemas/Decimal"
					},
					"photo_url": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"category_id",
					"restaurant_id",
					"updated_at",
					"created_at",
					"is_active",
					"allergen",
					"description",
					"price",
					"photo_url",
					"name",
					"id"
				],
				"type": "object"
			},
			"Dishes": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24DishesPayload_",
				"description": "Model Dishes"
			},
			"DishOutput": {
				"$ref": "#/components/schemas/Dishes"
			},
			"DishesByCategoryOutput": {
				"properties": {
					"dishes": {
						"items": {
							"$ref": "#/components/schemas/DishOutput"
						},
						"type": "array"
					},
					"category": {
						"type": "string"
					}
				},
				"required": [
					"dishes",
					"category"
				],
				"type": "object"
			},
			"Prisma.Decimal": {
				"type": "string"
			},
			"Pick_Dishes.name-or-photo_url-or-allergen-or-price-or-description_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"photo_url": {
						"type": "string",
						"nullable": true
					},
					"allergen": {
						"type": "string",
						"nullable": true
					},
					"price": {
						"$ref": "#/components/schemas/Prisma.Decimal"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"photo_url",
					"allergen",
					"price",
					"description"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"DishCreateInput": {
				"$ref": "#/components/schemas/Pick_Dishes.name-or-photo_url-or-allergen-or-price-or-description_"
			},
			"Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"photo_url": {
						"type": "string",
						"nullable": true
					},
					"allergen": {
						"type": "string",
						"nullable": true
					},
					"price": {
						"$ref": "#/components/schemas/Prisma.Decimal"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"WithHide_Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description___": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description__"
					},
					{
						"properties": {
							"hide": {
								"type": "boolean"
							}
						},
						"type": "object"
					}
				]
			},
			"DishUpdateInput": {
				"$ref": "#/components/schemas/WithHide_Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description___"
			},
			"FavListItemOut": {
				"properties": {
					"id": {
						"type": "string"
					},
					"list_id": {
						"type": "string"
					},
					"list": {
						"type": "string"
					},
					"restaurant_id": {
						"type": "string"
					},
					"restaurant": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"list_id",
					"restaurant_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FavListOutput": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"preview_photo_url": {
						"type": "string"
					},
					"number_of_items": {
						"type": "number",
						"format": "double"
					},
					"SaveListItem": {
						"items": {
							"$ref": "#/components/schemas/FavListItemOut"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FavListItem": {
				"properties": {
					"name": {
						"type": "string"
					},
					"brand_name": {
						"type": "string"
					},
					"logo_url": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					},
					"price_average": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_SaveList.name-or-emoji-or-color_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"emoji": {
						"type": "string"
					},
					"color": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"emoji",
					"color"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FavListCreateInput": {
				"$ref": "#/components/schemas/Pick_SaveList.name-or-emoji-or-color_"
			},
			"Partial_Dishes_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"photo_url": {
						"type": "string",
						"nullable": true
					},
					"price": {
						"$ref": "#/components/schemas/Prisma.Decimal"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"allergen": {
						"type": "string",
						"nullable": true
					},
					"is_active": {
						"type": "boolean"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"restaurant_id": {
						"type": "string"
					},
					"category_id": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"DishProps": {
				"$ref": "#/components/schemas/Partial_Dishes_"
			},
			"MenuOutput": {
				"properties": {
					"category": {
						"type": "string"
					},
					"dishes": {
						"items": {
							"$ref": "#/components/schemas/DishProps"
						},
						"type": "array"
					}
				},
				"required": [
					"category",
					"dishes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MyRatingInfoOutput": {
				"properties": {
					"status": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"replied_at": {
						"type": "string",
						"format": "date-time"
					},
					"answer": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MyRatingOutput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"rating_info": {
						"$ref": "#/components/schemas/MyRatingInfoOutput"
					},
					"header_url": {
						"type": "string"
					},
					"brand_name": {
						"type": "string"
					},
					"restaurant_type": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserRatingOutput": {
				"properties": {
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"avatar_url": {
						"type": "string"
					}
				},
				"required": [
					"firstname",
					"lastname"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RatingsOutput": {
				"properties": {
					"rating": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"user_info": {
						"$ref": "#/components/schemas/UserRatingOutput"
					},
					"replied_at": {
						"type": "string",
						"format": "date-time"
					},
					"answer": {
						"type": "string"
					}
				},
				"required": [
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_number.number_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"RatingStatsOutput": {
				"properties": {
					"rating": {
						"type": "string"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					},
					"stats": {
						"$ref": "#/components/schemas/Record_number.number_"
					}
				},
				"required": [
					"rating",
					"rating_count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateRatingRecord": {
				"properties": {
					"title": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"title",
					"comment",
					"rating"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MyReservationOutput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"price_average": {
						"type": "number",
						"format": "double"
					},
					"date_of_reservation": {
						"type": "string",
						"format": "date-time"
					},
					"city": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"rating_info": {
						"$ref": "#/components/schemas/RatingStatsOutput"
					},
					"header_url": {
						"type": "string"
					},
					"brand_name": {
						"type": "string"
					},
					"restaurant_type": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"price_average",
					"date_of_reservation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"%24Result.DefaultSelection_Prisma.%24ReservationPayload_": {
				"properties": {
					"restaurant_id": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string"
					},
					"date_of_reservation": {
						"type": "string",
						"format": "date-time"
					},
					"number_of_person": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"restaurant_id",
					"user_id",
					"updated_at",
					"created_at",
					"status",
					"date_of_reservation",
					"number_of_person",
					"id"
				],
				"type": "object"
			},
			"Reservation": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24ReservationPayload_",
				"description": "Model Reservation"
			},
			"Pick_User.firstname-or-lastname-or-avatar_url_": {
				"properties": {
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"avatar_url": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"firstname",
					"lastname",
					"avatar_url"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserInfo": {
				"$ref": "#/components/schemas/Pick_User.firstname-or-lastname-or-avatar_url_"
			},
			"WithUserInfo_Reservation_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Reservation"
					},
					{
						"properties": {
							"user": {
								"$ref": "#/components/schemas/UserInfo"
							}
						},
						"required": [
							"user"
						],
						"type": "object"
					}
				]
			},
			"ReservationOutput": {
				"$ref": "#/components/schemas/WithUserInfo_Reservation_"
			},
			"Pick_Reservation.number_of_person-or-date_of_reservation_": {
				"properties": {
					"number_of_person": {
						"type": "number",
						"format": "double"
					},
					"date_of_reservation": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"number_of_person",
					"date_of_reservation"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ReservationCreateInput": {
				"$ref": "#/components/schemas/Pick_Reservation.number_of_person-or-date_of_reservation_"
			},
			"Pick_Reservation.status_": {
				"properties": {
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ReservationUpdateInput": {
				"$ref": "#/components/schemas/Pick_Reservation.status_"
			},
			"Prisma.JsonObject": {
				"properties": {},
				"type": "object",
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON object.\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
			},
			"RestaurantOutput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"brand_name": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"restaurant_type": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/Prisma.JsonObject"
					},
					"price_average": {
						"type": "number",
						"format": "double"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"price_average"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "resdy-back",
		"version": "1.0.0",
		"description": "Rest API with Nodejs and Prisma",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Carlos Velázquez"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/authentication/current_user": {
			"get": {
				"operationId": "GetCurrentUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/UserOutput"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/authentication/login": {
			"post": {
				"operationId": "LogIn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"token": {
													"type": "string"
												}
											},
											"required": [
												"token"
											],
											"type": "object"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCredentials"
							}
						}
					}
				}
			}
		},
		"/authentication/create_user": {
			"post": {
				"operationId": "PostUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserOutput"
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreateInput"
							}
						}
					}
				}
			}
		},
		"/category/{restaurant_name}": {
			"get": {
				"operationId": "GetRestautantCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/WithIsUsed_CategoryProps_"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CategoryOutput"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryCreateInput"
							}
						}
					}
				}
			}
		},
		"/category/{category_id}": {
			"put": {
				"operationId": "PutCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CategoryOutput"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "category_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryUpdateInput"
							}
						}
					}
				}
			}
		},
		"/category": {
			"delete": {
				"operationId": "DeleteCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"category_ids": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"category_ids"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/dishes/{restaurant_name}": {
			"get": {
				"operationId": "GetDishes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/DishesByCategoryOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/dishes/{restaurant_name}/{category_id}": {
			"post": {
				"operationId": "PostDishes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/DishOutput"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "category_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DishCreateInput"
							}
						}
					}
				}
			}
		},
		"/dishes/{dish_id}": {
			"put": {
				"operationId": "PutDish",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/DishOutput"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "dish_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DishUpdateInput"
							}
						}
					}
				}
			}
		},
		"/dishes": {
			"delete": {
				"operationId": "DeleteDish",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"dish_ids": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"dish_ids"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/lists": {
			"get": {
				"operationId": "GetList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/FavListOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FavListItem"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FavListCreateInput"
							}
						}
					}
				}
			}
		},
		"/lists/{user_id}": {
			"delete": {
				"operationId": "DeleteList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "PutFavList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "list_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/lists/{user_id}/{list_id}": {
			"get": {
				"operationId": "GetListItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/FavListOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "list_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostListItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "list_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteListItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"List Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "list_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/menu/{restaurant_name}": {
			"get": {
				"operationId": "GetMenu",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/MenuOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Menu service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/myRatings": {
			"get": {
				"operationId": "GetMyRating",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"ratings": {
													"items": {
														"$ref": "#/components/schemas/MyRatingOutput"
													},
													"type": "array"
												}
											},
											"required": [
												"ratings"
											],
											"type": "object"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/{restaurant_name}": {
			"get": {
				"operationId": "GetRatings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/RatingsOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/stats/{restaurant_name}": {
			"get": {
				"operationId": "GetRatingStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/RatingStatsOutput"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/{rating_id}": {
			"put": {
				"operationId": "PutRating",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/RatingsOutput"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "rating_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateRatingRecord"
							}
						}
					}
				}
			}
		},
		"/reservation/myReservations": {
			"get": {
				"operationId": "GetMyReservations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/MyReservationOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/reservation/{restaurant_name}": {
			"get": {
				"operationId": "GetReservations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/ReservationOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Reservation"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReservationCreateInput"
							}
						}
					}
				}
			}
		},
		"/reservation/{reservation_id}": {
			"put": {
				"operationId": "PutReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Reservation"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"details": {
											"type": "string"
										}
									},
									"required": [
										"details"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "reservation_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReservationUpdateInput"
							}
						}
					}
				}
			}
		},
		"/restaurant": {
			"get": {
				"operationId": "GetRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/RestaurantOutput"
											},
											"type": "array"
										},
										{
											"type": "string"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "restaurant_type",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}