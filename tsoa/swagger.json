{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_UserOutput.Exclude_keyofUserOutput.password__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string",
						"nullable": true
					},
					"avatar_path": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"is_active": {
						"type": "boolean"
					},
					"is_owner": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"email",
					"firstname",
					"lastname",
					"avatar_path",
					"phone",
					"created_at",
					"is_active",
					"is_owner"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_UserOutput.password_": {
				"$ref": "#/components/schemas/Pick_UserOutput.Exclude_keyofUserOutput.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserRecord": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_UserOutput.password_"
					},
					{
						"properties": {
							"avatar_url": {
								"type": "string"
							}
						},
						"type": "object"
					}
				]
			},
			"UserCredentials": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"remember": {
						"type": "boolean"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"%24Result.DefaultSelection_Prisma.%24UserPayload_": {
				"properties": {
					"is_owner": {
						"type": "boolean"
					},
					"is_active": {
						"type": "boolean"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"password": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"avatar_path": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"is_owner",
					"is_active",
					"created_at",
					"password",
					"phone",
					"avatar_path",
					"lastname",
					"firstname",
					"email",
					"id"
				],
				"type": "object"
			},
			"User": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24UserPayload_",
				"description": "Model User"
			},
			"UserOutput": {
				"$ref": "#/components/schemas/User"
			},
			"Pick_User.email-or-firstname-or-lastname-or-password-or-is_owner_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string",
						"nullable": true
					},
					"is_owner": {
						"type": "boolean"
					}
				},
				"required": [
					"password",
					"email",
					"firstname",
					"lastname",
					"is_owner"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreateInput": {
				"$ref": "#/components/schemas/Pick_User.email-or-firstname-or-lastname-or-password-or-is_owner_"
			},
			"Partial_Pick_UserUpdateInputWithOldPassword.old_password-or-email-or-firstname-or-lastname-or-password-or-phone-or-avatar_path__": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string",
						"nullable": true
					},
					"avatar_path": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"old_password": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UserUpdateInput": {
				"$ref": "#/components/schemas/Partial_Pick_UserUpdateInputWithOldPassword.old_password-or-email-or-firstname-or-lastname-or-password-or-phone-or-avatar_path__"
			},
			"Partial_CategoryOutput_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"is_active": {
						"type": "boolean"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"restaurant_id": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"CategoryProps": {
				"$ref": "#/components/schemas/Partial_CategoryOutput_"
			},
			"WithIsUsed_CategoryProps_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/CategoryProps"
					},
					{
						"properties": {
							"is_used": {
								"type": "boolean"
							}
						},
						"required": [
							"is_used"
						],
						"type": "object"
					}
				]
			},
			"%24Result.DefaultSelection_Prisma.%24CategoryPayload_": {
				"properties": {
					"restaurant_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"is_active": {
						"type": "boolean"
					},
					"label": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"restaurant_id",
					"updated_at",
					"created_at",
					"is_active",
					"label",
					"id"
				],
				"type": "object"
			},
			"Category": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24CategoryPayload_",
				"description": "Model Category"
			},
			"CategoryOutput": {
				"$ref": "#/components/schemas/Category"
			},
			"Pick_CategoryOutput.label_": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"required": [
					"label"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"CategoryCreateInput": {
				"$ref": "#/components/schemas/Pick_CategoryOutput.label_"
			},
			"Partial_Pick_CategoryProps.label__": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"WithHide_Partial_Pick_CategoryProps.label___": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_Pick_CategoryProps.label__"
					},
					{
						"properties": {
							"hide": {
								"type": "boolean"
							}
						},
						"type": "object"
					}
				]
			},
			"CategoryUpdateInput": {
				"$ref": "#/components/schemas/WithHide_Partial_Pick_CategoryProps.label___"
			},
			"Decimal": {
				"type": "string"
			},
			"%24Result.DefaultSelection_Prisma.%24DishesPayload_": {
				"properties": {
					"category_id": {
						"type": "string"
					},
					"restaurant_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"is_active": {
						"type": "boolean"
					},
					"allergen": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"$ref": "#/components/schemas/Decimal"
					},
					"photo_url": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"category_id",
					"restaurant_id",
					"updated_at",
					"created_at",
					"is_active",
					"allergen",
					"description",
					"price",
					"photo_url",
					"name",
					"id"
				],
				"type": "object"
			},
			"Dishes": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24DishesPayload_",
				"description": "Model Dishes"
			},
			"DishOutput": {
				"$ref": "#/components/schemas/Dishes"
			},
			"DishesByCategoryOutput": {
				"properties": {
					"dishes": {
						"items": {
							"$ref": "#/components/schemas/DishOutput"
						},
						"type": "array"
					},
					"category": {
						"type": "string"
					}
				},
				"required": [
					"dishes",
					"category"
				],
				"type": "object"
			},
			"Prisma.Decimal": {
				"type": "string"
			},
			"Pick_DishOutput.name-or-photo_url-or-allergen-or-price-or-description_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"photo_url": {
						"type": "string",
						"nullable": true
					},
					"allergen": {
						"type": "string",
						"nullable": true
					},
					"price": {
						"$ref": "#/components/schemas/Prisma.Decimal"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"photo_url",
					"allergen",
					"price",
					"description"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"DishCreateInput": {
				"$ref": "#/components/schemas/Pick_DishOutput.name-or-photo_url-or-allergen-or-price-or-description_"
			},
			"Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"photo_url": {
						"type": "string",
						"nullable": true
					},
					"allergen": {
						"type": "string",
						"nullable": true
					},
					"price": {
						"$ref": "#/components/schemas/Prisma.Decimal"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"WithHide_Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description___": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description__"
					},
					{
						"properties": {
							"hide": {
								"type": "boolean"
							}
						},
						"type": "object"
					}
				]
			},
			"DishUpdateInput": {
				"$ref": "#/components/schemas/WithHide_Partial_Pick_DishProps.name-or-photo_url-or-allergen-or-price-or-description___"
			},
			"Partial_DishOutput_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"photo_url": {
						"type": "string",
						"nullable": true
					},
					"price": {
						"$ref": "#/components/schemas/Prisma.Decimal"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"allergen": {
						"type": "string",
						"nullable": true
					},
					"is_active": {
						"type": "boolean"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"restaurant_id": {
						"type": "string"
					},
					"category_id": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"DishProps": {
				"$ref": "#/components/schemas/Partial_DishOutput_"
			},
			"MenuRecord": {
				"properties": {
					"category": {
						"type": "string"
					},
					"dishes": {
						"items": {
							"$ref": "#/components/schemas/DishProps"
						},
						"type": "array"
					}
				},
				"required": [
					"category",
					"dishes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RestaurantSummary": {
				"properties": {
					"price_average": {
						"type": "number",
						"format": "double"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					},
					"rating": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"price_average",
					"rating_count",
					"rating"
				],
				"type": "object"
			},
			"Pick_RatingRecord.title-or-comment-or-rating-or-answer-or-created_at-or-replied_at_": {
				"properties": {
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"rating": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"title": {
						"type": "string",
						"nullable": true
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"answer": {
						"type": "string",
						"nullable": true
					},
					"replied_at": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"required": [
					"created_at",
					"rating",
					"title",
					"comment",
					"answer",
					"replied_at"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"RatingDetailOutput": {
				"$ref": "#/components/schemas/Pick_RatingRecord.title-or-comment-or-rating-or-answer-or-created_at-or-replied_at_"
			},
			"RestaurantCardOutput_RatingDetailOutput_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"nullable": true
					},
					"brand_name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"headers_path": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string"
					},
					"location": {},
					"summary": {
						"$ref": "#/components/schemas/RestaurantSummary"
					},
					"detail": {
						"allOf": [
							{
								"$ref": "#/components/schemas/RatingDetailOutput"
							}
						],
						"nullable": true
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"total_bookings": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"status",
					"brand_name",
					"address",
					"city",
					"headers_path",
					"restaurant_type",
					"location",
					"summary",
					"detail",
					"created_at",
					"total_bookings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_RatingsOutput.Exclude_keyofRatingsOutput.user_id-or-updated_at-or-restaurant_id__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"rating": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"title": {
						"type": "string",
						"nullable": true
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"status": {
						"type": "string"
					},
					"answer": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"created_at",
					"rating",
					"title",
					"comment",
					"status",
					"answer"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_RatingsOutput.user_id-or-updated_at-or-restaurant_id_": {
				"$ref": "#/components/schemas/Pick_RatingsOutput.Exclude_keyofRatingsOutput.user_id-or-updated_at-or-restaurant_id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserRatingOutput": {
				"properties": {
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"avatar_path": {
						"type": "string"
					}
				},
				"required": [
					"firstname"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RatingRecord": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_RatingsOutput.user_id-or-updated_at-or-restaurant_id_"
					},
					{
						"properties": {
							"replied_at": {
								"type": "string",
								"format": "date-time",
								"nullable": true
							},
							"user_info": {
								"$ref": "#/components/schemas/UserRatingOutput"
							}
						},
						"required": [
							"replied_at",
							"user_info"
						],
						"type": "object"
					}
				]
			},
			"Record_number.number_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"RatingStatsOutput": {
				"properties": {
					"rating": {
						"type": "string"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					},
					"stats": {
						"$ref": "#/components/schemas/Record_number.number_"
					}
				},
				"required": [
					"rating",
					"rating_count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"%24Result.DefaultSelection_Prisma.%24RatingPayload_": {
				"properties": {
					"restaurant_id": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"answer": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"restaurant_id",
					"user_id",
					"updated_at",
					"created_at",
					"answer",
					"status",
					"comment",
					"title",
					"rating",
					"id"
				],
				"type": "object"
			},
			"Rating": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24RatingPayload_",
				"description": "Model Rating"
			},
			"RatingsOutput": {
				"$ref": "#/components/schemas/Rating"
			},
			"Pick_RatingRecord.id-or-title-or-comment-or-rating_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"title": {
						"type": "string",
						"nullable": true
					},
					"comment": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"rating",
					"title",
					"comment"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"RatingUpdateRecord": {
				"$ref": "#/components/schemas/Pick_RatingRecord.id-or-title-or-comment-or-rating_"
			},
			"Pick_Reservation.number_of_person-or-date_of_reservation_": {
				"properties": {
					"number_of_person": {
						"type": "number",
						"format": "double"
					},
					"date_of_reservation": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"number_of_person",
					"date_of_reservation"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ReservationDetailOutput": {
				"$ref": "#/components/schemas/Pick_Reservation.number_of_person-or-date_of_reservation_"
			},
			"RestaurantCardOutput_ReservationDetailOutput_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"nullable": true
					},
					"brand_name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"headers_path": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string"
					},
					"location": {},
					"summary": {
						"$ref": "#/components/schemas/RestaurantSummary"
					},
					"detail": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ReservationDetailOutput"
							}
						],
						"nullable": true
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"total_bookings": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"status",
					"brand_name",
					"address",
					"city",
					"headers_path",
					"restaurant_type",
					"location",
					"summary",
					"detail",
					"created_at",
					"total_bookings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"%24Result.DefaultSelection_Prisma.%24ReservationPayload_": {
				"properties": {
					"restaurant_id": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string"
					},
					"date_of_reservation": {
						"type": "string",
						"format": "date-time"
					},
					"number_of_person": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"restaurant_id",
					"user_id",
					"updated_at",
					"created_at",
					"status",
					"date_of_reservation",
					"number_of_person",
					"id"
				],
				"type": "object"
			},
			"Reservation": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24ReservationPayload_",
				"description": "Model Reservation"
			},
			"Pick_UserRecord.firstname-or-lastname-or-avatar_url_": {
				"properties": {
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string",
						"nullable": true
					},
					"avatar_url": {
						"type": "string"
					}
				},
				"required": [
					"firstname",
					"lastname"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserInfo": {
				"$ref": "#/components/schemas/Pick_UserRecord.firstname-or-lastname-or-avatar_url_"
			},
			"WithUserInfo_Reservation_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Reservation"
					},
					{
						"properties": {
							"user": {
								"$ref": "#/components/schemas/UserInfo"
							}
						},
						"required": [
							"user"
						],
						"type": "object"
					}
				]
			},
			"ReservationOutput": {
				"$ref": "#/components/schemas/WithUserInfo_Reservation_"
			},
			"ReservationCreateInput": {
				"$ref": "#/components/schemas/ReservationDetailOutput"
			},
			"Pick_Reservation.status_": {
				"properties": {
					"status": {
						"type": "string"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ReservationUpdateInput": {
				"$ref": "#/components/schemas/Pick_Reservation.status_"
			},
			"Record_string.string_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"JsonObject": {
				"properties": {},
				"type": "object",
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON object.\nThis type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from."
			},
			"JsonArray": {
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches a JSON array.",
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"Prisma.JsonValue": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "boolean"
					},
					{
						"$ref": "#/components/schemas/JsonObject"
					},
					{
						"$ref": "#/components/schemas/JsonArray"
					}
				],
				"nullable": true,
				"description": "From https://github.com/sindresorhus/type-fest/\nMatches any valid JSON value."
			},
			"RestaurantRecord": {
				"properties": {
					"phone": {
						"type": "string",
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string",
						"nullable": true
					},
					"location": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Prisma.JsonValue"
							}
						],
						"nullable": true
					},
					"postal_code": {
						"type": "string",
						"nullable": true
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"headers_path": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"brand_name": {
						"type": "string",
						"nullable": true
					},
					"price_average": {
						"type": "number",
						"format": "double"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					},
					"extra_information": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						],
						"nullable": true
					},
					"social_media": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"phone",
					"description",
					"address",
					"country",
					"city",
					"restaurant_type",
					"location",
					"postal_code",
					"id",
					"name",
					"headers_path",
					"brand_name",
					"price_average",
					"rating",
					"rating_count",
					"extra_information",
					"social_media"
				],
				"type": "object",
				"additionalProperties": false
			},
			"%24Result.DefaultSelection_Prisma.%24RestaurantPayload_": {
				"properties": {
					"admin_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"admin_id",
					"created_at",
					"name",
					"id"
				],
				"type": "object"
			},
			"Restaurant": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24RestaurantPayload_",
				"description": "Model Restaurant"
			},
			"RestaurantOutput": {
				"$ref": "#/components/schemas/Restaurant"
			},
			"Partial_UpdateRestaurantInput_": {
				"properties": {
					"brand_name": {
						"type": "string"
					},
					"extra_description": {
						"type": "string"
					},
					"twitter": {
						"type": "string"
					},
					"instagram": {
						"type": "string"
					},
					"tiktok": {
						"type": "string"
					},
					"facebook": {
						"type": "string"
					},
					"headers": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"avatar_path": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string",
						"nullable": true
					},
					"postal_code": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_RestaurantRecord.-or-name-or-brand_name-or-address-or-price_average-or-headers_path-or-rating-or-rating_count-or-city-or-country-or-restaurant_type_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"format": "double"
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string",
						"nullable": true
					},
					"headers_path": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"brand_name": {
						"type": "string",
						"nullable": true
					},
					"price_average": {
						"type": "number",
						"format": "double"
					},
					"rating_count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"rating",
					"address",
					"country",
					"city",
					"restaurant_type",
					"headers_path",
					"brand_name",
					"price_average",
					"rating_count"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"RestaurantCardRecord": {
				"$ref": "#/components/schemas/Pick_RestaurantRecord.-or-name-or-brand_name-or-address-or-price_average-or-headers_path-or-rating-or-rating_count-or-city-or-country-or-restaurant_type_"
			},
			"LandingRestaurantInfo": {
				"properties": {},
				"additionalProperties": {
					"items": {
						"$ref": "#/components/schemas/RestaurantCardRecord"
					},
					"type": "array"
				},
				"type": "object"
			},
			"RestaurantCardOutput_unknown_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"nullable": true
					},
					"brand_name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"headers_path": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string"
					},
					"location": {},
					"summary": {
						"$ref": "#/components/schemas/RestaurantSummary"
					},
					"detail": {
						"nullable": true
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"total_bookings": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"status",
					"brand_name",
					"address",
					"city",
					"headers_path",
					"restaurant_type",
					"location",
					"summary",
					"detail",
					"created_at",
					"total_bookings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultsSummary_RestaurantCardOutput_unknown__": {
				"properties": {
					"results": {
						"items": {
							"$ref": "#/components/schemas/RestaurantCardOutput_unknown_"
						},
						"type": "array"
					},
					"options": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"results",
					"options",
					"count"
				],
				"type": "object"
			},
			"SortRestaurantBy": {
				"type": "string",
				"enum": [
					"rating",
					"visits",
					"new"
				]
			},
			"Pick_UserOutput.email-or-password-or-avatar_path_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"avatar_path": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"password",
					"email",
					"avatar_path"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"AdministratorInput": {
				"$ref": "#/components/schemas/Pick_UserOutput.email-or-password-or-avatar_path_"
			},
			"Pick_RestaurantProps.name_": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"RestaurantInput": {
				"$ref": "#/components/schemas/Pick_RestaurantProps.name_"
			},
			"Pick_InformationInput.Exclude_keyofInformationInput.description__": {
				"properties": {
					"phone": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"restaurant_type": {
						"type": "string",
						"nullable": true
					},
					"postal_code": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"phone",
					"address",
					"country",
					"city",
					"restaurant_type",
					"postal_code"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_InformationInput.description_": {
				"$ref": "#/components/schemas/Pick_InformationInput.Exclude_keyofInformationInput.description__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"RestaurantCreateInput": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AdministratorInput"
					},
					{
						"$ref": "#/components/schemas/RestaurantInput"
					},
					{
						"$ref": "#/components/schemas/Omit_InformationInput.description_"
					},
					{
						"properties": {
							"brand_name": {
								"type": "string",
								"nullable": true
							}
						},
						"required": [
							"brand_name"
						],
						"type": "object"
					}
				]
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "resdy-back",
		"version": "1.0.0",
		"description": "Rest API with Nodejs and Prisma",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Carlos Velázquez"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/authentication/current_user": {
			"get": {
				"operationId": "GetCurrentUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/UserRecord"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/authentication/login": {
			"post": {
				"operationId": "LogIn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {
											"type": "string"
										}
									},
									"required": [
										"token"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCredentials"
							}
						}
					}
				}
			}
		},
		"/authentication/create_user": {
			"post": {
				"operationId": "PostUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreateInput"
							}
						}
					}
				}
			}
		},
		"/authentication": {
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/UserUpdateInput"
									},
									{
										"properties": {
											"old_password": {
												"type": "string"
											}
										},
										"type": "object"
									}
								]
							}
						}
					}
				}
			}
		},
		"/category/{restaurant_name}": {
			"get": {
				"operationId": "GetRestautantCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/WithIsUsed_CategoryProps_"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryCreateInput"
							}
						}
					}
				}
			}
		},
		"/category/{category_id}": {
			"put": {
				"operationId": "PutCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "category_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryUpdateInput"
							}
						}
					}
				}
			}
		},
		"/category": {
			"delete": {
				"operationId": "DeleteCategory",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Category service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"category_ids": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"category_ids"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/dishes/{restaurant_name}": {
			"get": {
				"operationId": "GetDishes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DishesByCategoryOutput"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/dishes/{restaurant_name}/{category_id}": {
			"post": {
				"operationId": "PostDishes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DishOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "category_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DishCreateInput"
							}
						}
					}
				}
			}
		},
		"/dishes/{dish_id}": {
			"put": {
				"operationId": "PutDish",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DishOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "dish_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DishUpdateInput"
							}
						}
					}
				}
			}
		},
		"/dishes": {
			"delete": {
				"operationId": "DeleteDish",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Dishes service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"dish_ids": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"dish_ids"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/menu/{restaurant_name}": {
			"get": {
				"operationId": "GetMenu",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MenuRecord"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Menu service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/microservices/avatar": {
			"post": {
				"operationId": "PostAvatar",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Microservices"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"image": {
										"type": "string",
										"format": "binary"
									}
								},
								"required": [
									"image"
								]
							}
						}
					}
				}
			}
		},
		"/microservices/getSignedUrl": {
			"post": {
				"operationId": "GetSignedUrls",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Microservices"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"key": {
										"type": "string"
									}
								},
								"required": [
									"key"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/microservices/putSignedUrls": {
			"post": {
				"operationId": "PutFilesSignedUrl",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {},
									"additionalProperties": {
										"type": "string"
									},
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Microservices"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"properties": {
										"fileName": {
											"type": "string"
										},
										"contentType": {
											"type": "string"
										},
										"key": {
											"type": "string"
										}
									},
									"required": [
										"fileName",
										"contentType",
										"key"
									],
									"type": "object"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/microservices/deleteObject": {
			"post": {
				"operationId": "DeleteObject",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Microservices"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"key": {
										"type": "string"
									}
								},
								"required": [
									"key"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/rating/myRatings": {
			"get": {
				"operationId": "GetMyRating",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RestaurantCardOutput_RatingDetailOutput_"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/{restaurant_name}": {
			"get": {
				"operationId": "GetRatings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RatingRecord"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/stats/{restaurant_name}": {
			"get": {
				"operationId": "GetRatingStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RatingStatsOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/rating/{rating_id}": {
			"put": {
				"operationId": "PutRating",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RatingsOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Rating service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "rating_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RatingUpdateRecord"
							}
						}
					}
				}
			}
		},
		"/reservation/myReservations": {
			"get": {
				"operationId": "GetMyReservations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RestaurantCardOutput_ReservationDetailOutput_"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "start_date",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "end_date",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/reservation/{restaurant_name}": {
			"get": {
				"operationId": "GetReservations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ReservationOutput"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reservation"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReservationCreateInput"
							}
						}
					}
				}
			}
		},
		"/reservation/{reservation_id}": {
			"put": {
				"operationId": "PutReservation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reservation"
								}
							}
						}
					}
				},
				"tags": [
					"Reservation service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "reservation_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReservationUpdateInput"
							}
						}
					}
				}
			}
		},
		"/restaurant": {
			"get": {
				"operationId": "GetRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RestaurantRecord"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "restaurant_type",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {
											"type": "string"
										}
									},
									"required": [
										"token"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RestaurantCreateInput"
							}
						}
					}
				}
			}
		},
		"/restaurant/{restaurant_id}": {
			"put": {
				"operationId": "UpdateRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "restaurant_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_UpdateRestaurantInput_"
							}
						}
					}
				}
			}
		},
		"/restaurant/myRestaurant": {
			"get": {
				"operationId": "GetMyRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantRecord"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/restaurant/landing": {
			"get": {
				"operationId": "GetLandingRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LandingRestaurantInfo"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/restaurant/discover": {
			"get": {
				"operationId": "GetDiscoverRestaurant",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResultsSummary_RestaurantCardOutput_unknown__"
								}
							}
						}
					}
				},
				"tags": [
					"Restaurant service"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "city",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "swLat",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "swLng",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "neLat",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "neLng",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "restaurant_type",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/SortRestaurantBy"
						}
					}
				]
			}
		},
		"/verification/emailUsed": {
			"post": {
				"operationId": "VerifyIfEmailIsUsed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Verification service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/verification/restaurantNameUsed": {
			"post": {
				"operationId": "VerifyIfNameIsUsed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Verification service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}